"use strict";

var __db__ = require('__driver/db'),
	__async__ = require('__driver/myasync').async,
	__notifications__ = require("__driver/notifications"),
	__cache__ = require("__driver/cache");

module.exports = {
	exec: function (parms) {
		var fnc = require("mongodb").ObjectID;
		for(var v in parms.data){
			parms.data[v]._id = fnc(parms.data[v]._id);
		}
	  	var __cascade__ = new __async__([
	  		/*********************************/
	  		//eliminar cuestionarios de la base de datos
	  		//por ahora solo esta implementado la eliminacion manual por parte del usuario
	  		//quizas despues la eliminacion automatica, por parte del sistema o automatizacion
	  		//establecida por el usuario, lo cual cambiaria, agregaria y/o eliminaria algunos parametros
	  		function(){
				__db__.delete({
					collection : "survey",
					condition :{
						$or : parms.data
					}, callback : function(err, suc){
						if(err){
							parms.response.writeHead(400, {"Content-Type": "application/json"});
							parms.response.end("{}");
						}else{
							__cascade__.next();
						}
					}
				});
	  		},
	  		/*********************************/
	  		function(){
	  			var keys = Array();
	  			for(var v in parms.data){
	  				//enviar notificaciones de cuestionarios removidos
	  				//esto es util cuando alguien esta navegando en una encuesta pero el usuario due√±o la elimina
					__notifications__.notifyRemovedSurvey({
						db : db,
						idsurvey : parms.data[v].idsurvey,
						request : parms.request
					});
					keys.push(parms.data[v].idsurvey);
				}
				//eliminar cuestionarios de la cache en caso de que se encuentren ahi
				//para evitar cargas innecesarias en el sistema
				__cache__.del({
					category : {
						name : "survey",
						category : {
							name : "not-started"
						}
					},
					keys : keys
				});
				__cache__.del({
					category : {
						name : "survey",
						category : {
							name : "ongoing"
						}
					},
					keys : keys
				});
				parms.response.writeHead(200, {"Content-Type": "application/json"});
				parms.response.end("{}");
	  		}
	  	]).start();
	}
}