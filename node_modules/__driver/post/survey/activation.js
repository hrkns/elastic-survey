"use strict";

var mongodb = require("mongodb");
var __db__ = require('__driver/db'),
	__async__ = require('__driver/myasync').async,
	__notifications__ = require("__driver/notifications"),
	__cache__ = require("__driver/cache");

function conversion(amount, type){
	amount = Number(amount);
	switch(type){
		case "seconds": return amount * 1000;
		case "minutes": return amount * 1000 * 60;
		case "hours": 	return amount * 1000 * 60 * 60;
		case "days": 	return amount * 1000 * 60 * 60 * 24;
		case "weeks": 	return amount * 1000 * 60 * 60 * 24 * 7;
	}
}

function cacheOngoing(condition, parms){
	__db__.find({
		collection : "survey",
		condition : condition,
		callback : function(err, s){
			if(err){
			}else{
				for(var sur in s){
					if(	s[sur].type_time_apply.indexOf("end_time") != -1 ||
						s[sur].type_time_apply.indexOf("end_date") != -1)
						__cache__.add({
							category : {
								name : "survey",
								category : {
									name : "ongoing"
								}
							},
							data : [
								{
									key : (s[sur]._id),
									data : {
										end : s[sur].type_time_apply.indexOf("end_date") != -1?new Date(s[sur].end):new Date((new Date(s[sur].started_at)).getTime() + conversion(s[sur].time_amount, s[sur].time_type)),
										_id : s[sur]._id
									}
								}
							]
						});
				}
			}
		}
	});
}

function activation(parms){
	var idresource, condition, tmp;

	if(parms.url_data){
		idresource = mongodb.ObjectId(parms.url_data[0]);
		condition = {
			_id : (idresource)
		};
	}else{
		tmp = [];

		for(var v in parms.ids)
			tmp.push({_id : mongodb.ObjectId(parms.ids[v])})  ;
		condition = {
			$or : tmp
		};
	}

	var __cascade__ = new __async__([
		function(){
			__db__.update({
				collection : "survey",
				set : {
					status : "ongoing",
					started_at : new Date()
				},
				condition:condition,
				callback : function(x, y){
					if(x){
						if(parms.url_data){
							parms.response.writeHead(400, {"Content-Type": "application/json"});
							parms.response.end('{}');
						}else{
							/**/
							console.log(x);
						}
					}else{
						__cascade__.next();
					}
				}
			});
		},
		function(){
			if(parms.url_data){
				__notifications__.notifyStartedSurvey({
					idsurvey : (idresource),
					request : parms.request
				});
				cacheOngoing({_id : idresource}, parms);
				parms.response.writeHead(200, {"Content-Type": "application/json"});
				parms.response.end('{}');
			}else{
				/**/
				for(var i in tmp)
					__notifications__.notifyStartedSurvey({
						idsurvey : tmp[i]._id,
					});
				cacheOngoing({$or : tmp}, parms);
			}
		}
	]).start();
}

module.exports = {
	exec: activation
}